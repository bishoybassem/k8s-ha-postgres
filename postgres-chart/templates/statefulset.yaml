kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: postgres
spec: 
  replicas: {{ .Values.clusterSize }}
  selector: 
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: db-scripts
          configMap: 
            name: db-scripts
            defaultMode: 0755
        - name: controller-status
          emptyDir: {}
      containers:
        - name: postgres
          image: {{ .Values.postgres.image.name }}:{{ .Values.postgres.image.tag }}
          volumeMounts:
            - name: controller-status
              mountPath: /status
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: db-scripts
              mountPath: /docker-entrypoint-initdb.d/db-init.sh
              subPath: db-init.sh
            - name: db-scripts
              mountPath: /entrypoint-wrapper.sh
              subPath: entrypoint-wrapper.sh
          command: ["/entrypoint-wrapper.sh"]
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.dbName }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.superuserName }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-passwords
                  key: superuser
            - name: REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-passwords
                  key: replication
          readinessProbe:
            exec:
              command: ['pg_isready']
          livenessProbe:
            exec:
              command: ['pg_isready']
            initialDelaySeconds: 60
        - name: consul
          image: {{ .Values.consul.image.name }}:{{ .Values.consul.image.tag }}
          args: ["agent", "-retry-join", {{ .Values.consul.serverHostName | quote }}]
        - name: controller
          image: {{ .Values.controller.image.name }}:{{ .Values.controller.image.tag }}
          args: ["/status"]
          volumeMounts:
            - name: controller-status
              mountPath: /status
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        {{- if .Values.storageClassName }}
        {{- if eq "-" .Values.storageClassName }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.storageClassName }}"
        {{- end }}
        {{- end }}